  var width = 900, 
    height = 600;  

  var projection = d3.geo.conicConformal()
                     .center([2.3445591808,48.85399])
                     .scale(200000);
                     
  var path = d3.geo.path().projection(projection);
  svg = d3.select("body").append("svg")   
    .attr("width", width)
    .attr("height", height);

  d3.json("paris.geojson", function(json) {
    svg.selectAll("path")   
      .data(json.features)  
      .enter()
      .append("path") 
      .attr("d", path);
  });

	var opt = {}
	opt.epsilon = 10; // epsilon is learning rate (10 = default)
	opt.perplexity = 30; // roughly how many neighbors each point influences (30 = default)
	opt.dim = 2; // dimensionality of the embedding (2 = default)

	var tsne = new tsnejs.tSNE(opt); // create a tSNE instance

	// initialize data. Here we have 3 points and some example pairwise dissimilarities
	var dists = [[1.0, 0.1, 0.2], [0.1, 1.0, 0.3], [0.2, 0.1, 1.0]];
	tsne.initDataDist(dists);

	for(var k = 0; k < 500; k++) {
	  tsne.step(); // every time you call this, solution gets better
	}

	var Y = tsne.getSolution(); // Y is an array of 2-D points that you can plot
